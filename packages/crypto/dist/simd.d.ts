export declare class SIMD {
    private static wasmSIMD;
    /**
     * Initializes the SIMD module.
     * Throws immediately if SIMD is not supported.
     */
    static initialize(): Promise<void>;
    /**
     * Computes the batch SHA3-256 hash for a set of inputs generated by appending nonce values
     * to the headerBase. The inputs are computed for nonces in the range [startNonce, startNonce + batchSize).
     *
     * @param headerBase - Base header string.
     * @param startNonce - Starting nonce value.
     * @param batchSize - Number of entries in the batch.
     * @returns Array of hash strings.
     */
    static batchHashSHA3(headerBase: string, startNonce: number, batchSize: number): Promise<string[]>;
    /**
     * Helper to decode a null-terminated string from WASM memory.
     * Throws an error if no null terminator is found within memory bounds.
     *
     * @param ptr Pointer to the string in WASM memory.
     * @param memory The wasm.Memory instance.
     * @returns The decoded JavaScript string.
     */
    private static decodeWasmString;
}
