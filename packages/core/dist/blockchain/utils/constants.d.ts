import { NetworkType } from "@h3tag-blockchain/shared";
export declare const BLOCKCHAIN_CONSTANTS: {
    CURRENCY: {
        NAME: string;
        SYMBOL: string;
        DECIMALS: number;
        INITIAL_SUPPLY: number;
        MAX_SUPPLY: number;
        UNITS: {
            MACRO: bigint;
            MICRO: bigint;
            MILLI: bigint;
            TAG: bigint;
        };
        NETWORK: {
            type: {
                MAINNET: NetworkType;
                TESTNET: NetworkType;
                DEVNET: NetworkType;
            };
            port: {
                MAINNET: number;
                TESTNET: number;
                DEVNET: number;
            };
            host: {
                MAINNET: string;
                TESTNET: string;
                DEVNET: string;
            };
            seedDomains: {
                MAINNET: string[];
                TESTNET: string[];
                DEVNET: string[];
            };
        };
    };
    MINING: {
        MAX_ATTEMPTS: number;
        CURRENT_VERSION: number;
        MAX_VERSION: number;
        MIN_VERSION: number;
        BATCH_SIZE: number;
        BLOCKS_PER_YEAR: number;
        INITIAL_REWARD: bigint;
        MIN_REWARD: bigint;
        HALVING_INTERVAL: number;
        MAX_HALVINGS: number;
        BLOCK_TIME: number;
        MAX_BLOCK_TIME: number;
        MAX_DIFFICULTY: number;
        TARGET_TIME_PER_BLOCK: number;
        DIFFICULTY: number;
        MIN_HASHRATE: number;
        MIN_POW_NODES: number;
        MAX_FORK_DEPTH: number;
        EMERGENCY_POW_THRESHOLD: number;
        MIN_POW_SCORE: number;
        FORK_RESOLUTION_TIMEOUT_MS: number;
        DIFFICULTY_ADJUSTMENT_INTERVAL: number;
        INITIAL_DIFFICULTY: number;
        HASH_BATCH_SIZE: number;
        MAX_TARGET: bigint;
        MIN_DIFFICULTY: number;
        CHAIN_DECISION_THRESHOLD: number;
        ORPHAN_WINDOW: number;
        PROPAGATION_WINDOW: number;
        MAX_PROPAGATION_TIME: number;
        TARGET_TIMESPAN: number;
        TARGET_BLOCK_TIME: number;
        ADJUSTMENT_INTERVAL: number;
        MAX_ADJUSTMENT_FACTOR: number;
        VOTE_INFLUENCE: number;
        MIN_VOTES_WEIGHT: number;
        MAX_CHAIN_LENGTH: number;
        FORK_RESOLUTION_TIMEOUT: number;
        MIN_REWARD_CONTRIBUTION: bigint;
        MAX_BLOCK_SIZE: number;
        MIN_BLOCK_SIZE: number;
        MAX_TRANSACTIONS: number;
        MIN_BLOCKS_MINED: number;
        BLOCK_REWARD: bigint;
        MAX_TX_SIZE: number;
        MIN_FEE_PER_BYTE: bigint;
        AUTO_MINE: boolean;
        CACHE_TTL: number;
        MAX_SUPPLY: bigint;
        SAFE_CONFIRMATION_TIME: number;
    };
    VOTING_CONSTANTS: {
        VOTING_PERIOD_BLOCKS: number;
        VOTING_PERIOD_MS: number;
        PERIOD_CHECK_INTERVAL: number;
        MIN_POW_WORK: number;
        COOLDOWN_BLOCKS: number;
        MAX_VOTES_PER_PERIOD: number;
        MAX_VOTES_PER_WINDOW: number;
        MIN_ACCOUNT_AGE: number;
        MIN_PEER_COUNT: number;
        VOTE_ENCRYPTION_VERSION: string;
        MAX_VOTE_SIZE_BYTES: number;
        VOTING_WEIGHT: number;
        MIN_VOTES_FOR_VALIDITY: number;
        VOTE_POWER_DECAY: number;
        MIN_VOTING_POWER: bigint;
        MAX_VOTING_POWER: bigint;
        MATURITY_PERIOD: number;
        CACHE_DURATION: number;
        MIN_VOTE_AMOUNT: number;
        MIN_POW_CONTRIBUTION: number;
        REPUTATION_THRESHOLD: number;
        RATE_LIMIT_WINDOW: number;
    };
    CONSENSUS: {
        POW_WEIGHT: number;
        MIN_POW_HASH_RATE: number;
        MIN_VOTER_COUNT: number;
        MIN_PERIOD_LENGTH: number;
        VOTING_PERIOD: number;
        MIN_PARTICIPATION: number;
        VOTE_POWER_CAP: number;
        VOTING_DAY_PERIOD: number;
        CONSENSUS_TIMEOUT: number;
        EMERGENCY_TIMEOUT: number;
        CHAIN_SELECTION_TIMEOUT: number;
        VOTE_COLLECTION_TIMEOUT: number;
        INITIAL_REWARD: bigint;
        BASE_REWARD: bigint;
        MIN_REWARD: bigint;
        MAX_SAFE_REWARD: bigint;
        HALVING_INTERVAL: number;
        BASE_DIFFICULTY: bigint;
        MAX_FORK_LENGTH: number;
        VALIDATOR_WEIGHT: number;
    };
    UTIL: {
        RETRY: {
            MAX_ATTEMPTS: number;
            INITIAL_DELAY_MS: number;
            MAX_DELAY_MS: number;
            BACKOFF_FACTOR: number;
        };
        CACHE: {
            TTL_MS: number;
            TTL_HOURS: number;
            CLEANUP_INTERVAL_MS: number;
        };
        PROCESSING_TIMEOUT_MS: number;
        RETRY_ATTEMPTS: number;
        RETRY_DELAY_MS: number;
        CACHE_TTL_HOURS: number;
        VALIDATION_TIMEOUT_MS: number;
        INITIAL_RETRY_DELAY: number;
        MAX_RETRY_DELAY: number;
        BACKOFF_FACTOR: number;
        MAX_RETRIES: number;
        CACHE_TTL: number;
        PRUNE_THRESHOLD: number;
        BASE_MAX_SIZE: number;
        ABSOLUTE_MAX_SIZE: number;
        STALE_THRESHOLD: number;
    };
    VALIDATOR: {
        MIN_VALIDATOR_UPTIME: number;
        MIN_VOTE_PARTICIPATION: number;
        MIN_BLOCK_PRODUCTION: number;
    };
    TRANSACTION: {
        MIN_FEE: bigint;
        CURRENT_VERSION: number;
        MAX_INPUTS: number;
        MAX_OUTPUTS: number;
        MAX_TIME_DRIFT: number;
        AMOUNT_LIMITS: {
            MIN: bigint;
            MAX: bigint;
            DECIMALS: number;
        };
        MEMPOOL: {
            MAX_SIZE: number;
            HIGH_CONGESTION_THRESHOLD: number;
            MAX_MB: number;
            MIN_FEE_RATE: bigint;
            FEE_RATE_MULTIPLIER: number;
            EVICTION_INTERVAL: number;
            CLEANUP_INTERVAL: number;
            MAX_MEMORY_USAGE: number;
            MIN_SIZE: number;
        };
        PROCESSING_TIMEOUT: number;
        MAX_SIZE: number;
        MAX_SCRIPT_SIZE: number;
        MAX_TOTAL_INPUT: bigint;
        MAX_SIGNATURE_SIZE: number;
        MAX_PUBKEY_SIZE: number;
        MIN_INPUT_AGE: number;
        MIN_TX_VERSION: number;
        MAX_TX_VERSION: number;
        REQUIRED: number;
        MAX_MESSAGE_AGE: number;
    };
    BACKUP_VALIDATOR_CONFIG: {
        MAX_BACKUP_ATTEMPTS: number;
        BACKUP_SELECTION_TIMEOUT: number;
        MIN_BACKUP_REPUTATION: number;
        MIN_BACKUP_UPTIME: number;
    };
    VERSION: number;
    MIN_SAFE_CONFIRMATIONS: number;
    MAX_SAFE_UTXO_AMOUNT: number;
    COINBASE_MATURITY: number;
    USER_AGENT: string;
    PROTOCOL_VERSION: number;
    MAX_MEMPOOL_SIZE: number;
    MIN_RELAY_TX_FEE: number;
    MIN_PEERS: number;
    MESSAGE: {
        PREFIX: string;
        MAX_LENGTH: number;
        MIN_LENGTH: number;
    };
};
